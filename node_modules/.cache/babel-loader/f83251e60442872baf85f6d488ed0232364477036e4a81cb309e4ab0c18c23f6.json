{"ast":null,"code":"var _jsxFileName = \"C:\\\\D\\\\R_ud\\\\Food_app\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport classes from \"./Checkout.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isEmpty = value => value.trim() === \"\";\nconst isFiveChars = value => value.trim().length === 5;\nconst Checkout = props => {\n  _s();\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostal = postalInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredPostalIsValid = !isEmpty(enteredPostal);\n    const enteredCityIsValid = isFiveChars(enteredCity);\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postal: enteredPostalIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredCityIsValid && enteredStreetIsValid && enteredPostalIsValid;\n    if (!formIsValid) {\n      return;\n    }\n  };\n  const nameControlClasses = `${classes.control} ${formInputsValidity.name ? \"\" : classes.invalid}`;\n  const streetControlClasses = `${classes.control} ${formInputsValidity.street ? \"\" : classes.invalid}`;\n  const cityControlClasses = `${classes.control} ${formInputsValidity.city ? \"\" : classes.invalid}`;\n  const postalControlClasses = `${classes.control} ${formInputsValidity.postal ? \"\" : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please Enter a Valid Name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), !formInputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please Enter a Valid Street!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postalControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), !formInputsValidity.postal && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please Enter a Valid Postal!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), !formInputsValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please Enter a Valid City!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Checkout, \"X4HpVobBeoN5uXWmEP967qoi3nc=\");\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["useRef","useState","classes","isEmpty","value","trim","isFiveChars","length","Checkout","props","formInputsValidity","setFormInputsValidity","name","street","city","postalCode","nameInputRef","streetInputRef","postalInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostal","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredPostalIsValid","enteredCityIsValid","postal","formIsValid","nameControlClasses","control","invalid","streetControlClasses","cityControlClasses","postalControlClasses","form","actions","onCancel","submit"],"sources":["C:/D/R_ud/Food_app/src/components/Cart/Checkout.js"],"sourcesContent":["import { useRef, useState } from \"react\";\r\nimport classes from \"./Checkout.module.css\";\r\n\r\nconst isEmpty = (value) => value.trim() === \"\";\r\nconst isFiveChars = (value) => value.trim().length === 5;\r\n\r\nconst Checkout = (props) => {\r\n  const [formInputsValidity, setFormInputsValidity] = useState({\r\n    name: true,\r\n    street: true,\r\n    city: true,\r\n    postalCode: true,\r\n  });\r\n\r\n  const nameInputRef = useRef();\r\n  const streetInputRef = useRef();\r\n  const postalInputRef = useRef();\r\n  const cityInputRef = useRef();\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredStreet = streetInputRef.current.value;\r\n    const enteredPostal = postalInputRef.current.value;\r\n    const enteredCity = cityInputRef.current.value;\r\n\r\n    const enteredNameIsValid = !isEmpty(enteredName);\r\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n    const enteredPostalIsValid = !isEmpty(enteredPostal);\r\n    const enteredCityIsValid = isFiveChars(enteredCity);\r\n\r\n    setFormInputsValidity({\r\n      name: enteredNameIsValid,\r\n      street: enteredStreetIsValid,\r\n      city: enteredCityIsValid,\r\n      postal: enteredPostalIsValid,\r\n    });\r\n\r\n    const formIsValid =\r\n      enteredNameIsValid &&\r\n      enteredCityIsValid &&\r\n      enteredStreetIsValid &&\r\n      enteredPostalIsValid;\r\n\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const nameControlClasses = `${classes.control} ${\r\n    formInputsValidity.name ? \"\" : classes.invalid\r\n  }`;\r\n\r\n  const streetControlClasses = `${classes.control} ${\r\n    formInputsValidity.street ? \"\" : classes.invalid\r\n  }`;\r\n\r\n  const cityControlClasses = `${classes.control} ${\r\n    formInputsValidity.city ? \"\" : classes.invalid\r\n  }`;\r\n\r\n  const postalControlClasses = `${classes.control} ${\r\n    formInputsValidity.postal ? \"\" : classes.invalid\r\n  }`;\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={nameControlClasses}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input type=\"text\" id=\"name\" ref={nameInputRef} />\r\n        {!formInputsValidity.name && <p>Please Enter a Valid Name!</p>}\r\n      </div>\r\n      <div className={streetControlClasses}>\r\n        <label htmlFor=\"street\">Street</label>\r\n        <input type=\"text\" id=\"street\" ref={streetInputRef} />\r\n        {!formInputsValidity.street && <p>Please Enter a Valid Street!</p>}\r\n      </div>\r\n      <div className={postalControlClasses}>\r\n        <label htmlFor=\"postal\">Postal Code</label>\r\n        <input type=\"text\" id=\"postal\" ref={postalInputRef} />\r\n        {!formInputsValidity.postal && <p>Please Enter a Valid Postal!</p>}\r\n      </div>\r\n      <div className={cityControlClasses}>\r\n        <label htmlFor=\"city\">City</label>\r\n        <input type=\"text\" id=\"city\" ref={cityInputRef} />\r\n        {!formInputsValidity.city && <p>Please Enter a Valid City!</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}